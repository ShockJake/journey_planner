---
name: Build Journey Planner Frontend
on:
  push:
    branches: [master]
  pull_request:
    types: [opened, synchronize, reopened]
env:
  IMAGE_NAME: europe-central2-docker.pkg.dev/argon-fire-467320-j2/jp-images-registry/journey-planner-frontend
  IMAGE_TAG: ${{ github.sha }}
jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 22.14.0
      - name: Get dependencies
        run: |-
          cd ./frontend
          npm install
      - name: Build and test
        env:
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
        run: |-
          ./scripts/build_frontend.sh
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.11.1
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2.1.11
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      - name: Set project ID for gcloud
        run: gcloud config set project argon-fire-467320-j2
      - name: Configure Docker to use gcloud as a credential helper
        run: |-
          gcloud auth configure-docker europe-central2-docker.pkg.dev
      - name: Install GKE gcloud auth plugin
        uses: "google-github-actions/setup-gcloud@v2"
        with:
          install_components: "gke-gcloud-auth-plugin"
      - name: Push Docker image to Google Container Registry
        run: |-
          docker push "${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}"
      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials jp-cluster \
            --zone europe-central2
      - name: Deploy to Kubernetes
        env:
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
        run: |-
          # Update the Kubernetes deployment image
          kubectl set image deployment/jp-frontend jp-frontend=$IMAGE_NAME:$IMAGE_TAG
          # Optionally, wait for rollout to finish
          kubectl rollout status deployment/jp-frontend
